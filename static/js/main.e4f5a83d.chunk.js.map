{"version":3,"sources":["Components/Fullpage.js","Sections/TitlesAndIcons.js","Sections/AboutSection.js","Components/SkillCard.js","Sections/SkillSection.js","Components/Navigation.js","App.js","serviceWorker.js","index.js"],"names":["Fullpage","children","this","props","react_default","a","createElement","className","concat","Component","TitlesAndIcons","style","backgroundColor","bgColor","color","fontColor","Fullpage_Fullpage","data","title","subtitle","Object","keys","links","map","key","react_social_icons","url","modules","activeClass","to","spy","smooth","offset","duration","display","flexDirection","justifyContent","alignItems","transform","material_icons_react_default","icon","size","AboutSection","sections","items","content","SkillCard","skill","src","image","SkillSection","eachSkill","SkillCard_SkillCard","Navigation","href","App","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","counter","fnColor","changeTheme","bind","assertThisInitialized","setState","lib_default","followMouse","animationInterval","snowCharacter","vMaxY","vMaxX","name","Navigation_Navigation","onClick","TitlesAndIcons_TitlesAndIcons","AboutSection_AboutSection","SkillSection_SkillSection","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"6iDAGqBA,0LACV,IACEC,EAAYC,KAAKC,MAAjBF,SACT,OACIG,EAAAC,EAAAC,cAAA,OAAKC,UAAS,YAAAC,OAAcN,KAAKC,MAAMI,WAAa,KAC/CN,UALyBQ,6CCKjBC,mLAEjB,OACEN,EAAAC,EAAAC,cAAA,OACEK,MAAO,CACLC,gBAAiBV,KAAKC,MAAMU,QAC5BC,MAAOZ,KAAKC,MAAMY,YAGpBX,EAAAC,EAAAC,cAACU,EAAD,CAAUT,UAAS,SACjBH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,SAASU,EAAKC,OAC5Bd,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,MAAIC,UAAU,YAAYU,EAAKE,WAEjCf,EAAAC,EAAAC,cAAA,WACGc,OAAOC,KAAKJ,EAAKK,OAAOC,IAAI,SAAAC,GAC3B,OAAOpB,EAAAC,EAAAC,cAACmB,EAAA,WAAD,CAAYC,IAAKT,EAAKK,MAAME,SAIzCpB,EAAAC,EAAAC,cAACqB,EAAA,KAAD,CACEC,YAAY,SACZC,GAAG,QACHC,KAAK,EACLC,QAAQ,EACRC,OAAQ,GACRC,SAAU,KAEV7B,EAAAC,EAAAC,cAAA,OACEK,MAAO,CACLuB,QAAS,OACTC,cAAe,MACfC,eAAgB,SAChBC,WAAY,SACZC,UAAW,sBAGblC,EAAAC,EAAAC,cAACiC,EAAAlC,EAAD,CACEmC,KAAK,sBACLC,KAAK,QACL3B,MAAOZ,KAAKC,MAAMY,sBAxCYN,aCDvBiC,0LAEjB,OACEtC,EAAAC,EAAAC,cAAA,OACEK,MAAO,CACLC,gBAAiBV,KAAKC,MAAMU,QAC5BC,MAAOZ,KAAKC,MAAMY,YAGpBX,EAAAC,EAAAC,cAACU,EAAD,CAAUT,UAAU,UAClBH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,SAASU,EAAK0B,SAAS,GAAGzB,OACxCd,EAAAC,EAAAC,cAAA,SAAIW,EAAK0B,SAAS,GAAGC,MAAM,GAAGC,UAEhCzC,EAAAC,EAAAC,cAACqB,EAAA,KAAD,CACEC,YAAY,SACZC,GAAG,SACHC,KAAK,EACLC,QAAQ,EACRC,OAAQ,GACRC,SAAU,KAEV7B,EAAAC,EAAAC,cAAA,OACEK,MAAO,CACLuB,QAAS,OACTC,cAAe,MACfC,eAAgB,SAChBC,WAAY,WAGdjC,EAAAC,EAAAC,cAACiC,EAAAlC,EAAD,CACEmC,KAAK,sBACLC,KAAK,QACL3B,MAAOZ,KAAKC,MAAMY,sBAhCUN,cCJrBqC,0LACV,IACCC,EAAU7C,KAAKC,MAAf4C,MACR,OACE3C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACbH,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBAAgByC,IAAKD,EAAMF,QAAQI,SAEpD7C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBACbH,EAAAC,EAAAC,cAAA,UAAKyC,EAAMF,QAAQ3B,gBATUT,cCKlByC,0LAEjB,OACE9C,EAAAC,EAAAC,cAAA,OACEK,MAAO,CACLC,gBAAiBV,KAAKC,MAAMU,QAC5BC,MAAOZ,KAAKC,MAAMY,YAGpBX,EAAAC,EAAAC,cAACU,EAAD,CAAUT,UAAU,SAClBH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,SAASU,EAAK0B,SAAS,GAAGzB,OACxCd,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACZU,EAAK0B,SAAS,GAAGC,MAAMrB,IAAI,SAAA4B,GAC1B,OAAO/C,EAAAC,EAAAC,cAAC8C,EAAD,CAAW7C,UAAU,aAAawC,MAAOI,QAKtD/C,EAAAC,EAAAC,cAACqB,EAAA,KAAD,CACEC,YAAY,SACZC,GAAG,OACHC,KAAK,EACLC,QAAQ,EACRC,OAAQ,GACRC,SAAU,KAEV7B,EAAAC,EAAAC,cAAA,OACEK,MAAO,CACLuB,QAAS,OACTC,cAAe,MACfC,eAAgB,SAChBC,WAAY,WAGdjC,EAAAC,EAAAC,cAACiC,EAAAlC,EAAD,CACEmC,KAAK,oBACLC,KAAK,QACL3B,MAAOZ,KAAKC,MAAMY,sBArCUN,cCJrB4C,0LACV,IACCpD,EAAaC,KAAKC,MAAlBF,SAER,OACEG,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cAAcN,GAC7BG,EAAAC,EAAAC,cAACqB,EAAA,KAAD,CACEC,YAAY,SACZC,GAAG,SACHC,KAAK,EACLC,QAAQ,EACRC,OAAQ,GACRC,SAAU,KAEV7B,EAAAC,EAAAC,cAAA,KAAGgD,KAAK,IACNlD,EAAAC,EAAAC,cAAA,qBAGJF,EAAAC,EAAAC,cAACqB,EAAA,KAAD,CACEC,YAAY,SACZC,GAAG,QACHC,KAAK,EACLC,QAAQ,EACRC,OAAQ,GACRC,SAAU,KAEV7B,EAAAC,EAAAC,cAAA,KAAGgD,KAAK,IACNlD,EAAAC,EAAAC,cAAA,4BA5B4BG,+BCoEzB8C,cA5Db,SAAAA,EAAYpD,GAAO,IAAAqD,EAAA,OAAApC,OAAAqC,EAAA,EAAArC,CAAAlB,KAAAqD,IACjBC,EAAApC,OAAAsC,EAAA,EAAAtC,CAAAlB,KAAAkB,OAAAuC,EAAA,EAAAvC,CAAAmC,GAAAK,KAAA1D,KAAMC,KACD0D,MAAQ,CACXC,QAAS,EACTC,QAAS,OACTlD,QAAS,WAEX2C,EAAKQ,YAAcR,EAAKQ,YAAYC,KAAjB7C,OAAA8C,EAAA,EAAA9C,CAAAoC,IAPFA,6EAWjB,IAEIM,EAAiC,IAAvB5D,KAAK2D,MAAMC,QAAgB,EAAI5D,KAAK2D,MAAMC,QAAU,EAClE5D,KAAKiE,SAAS,CACZL,QAASA,EACTjD,QALsB,CAAC,UAAW,UAAW,UAAW,WAK7BX,KAAK2D,MAAMC,SACtCC,QALgB,CAAC,UAAW,OAAQ,OAAQ,WAKvB7D,KAAK2D,MAAMC,4CAKlC,OACE1D,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAC8D,EAAA/D,EAAD,CACEgE,aAAa,EACbC,kBAAmB,GACnBC,cAAe,IACfC,MAAO,EACPC,MAAO,IAGTrE,EAAAC,EAAAC,cAACqB,EAAA,QAAD,CAAS+C,KAAK,OAAOnE,UAAU,YAC/BH,EAAAC,EAAAC,cAACqE,EAAD,KACEvE,EAAAC,EAAAC,cAACiC,EAAAlC,EAAD,CACEuE,QAAS1E,KAAK8D,YACdxB,KAAK,QACLC,KAAK,SACL3B,MAAOZ,KAAK2D,MAAME,WAGtB3D,EAAAC,EAAAC,cAACuE,EAAD,CACE9D,UAAWb,KAAK2D,MAAME,QACtBlD,QAASX,KAAK2D,MAAMhD,UAEtBT,EAAAC,EAAAC,cAACqB,EAAA,QAAD,CAAS+C,KAAK,QAAQnE,UAAU,YAChCH,EAAAC,EAAAC,cAACwE,EAAD,CACE/D,UAAWb,KAAK2D,MAAME,QACtBlD,QAASX,KAAK2D,MAAMhD,UAEtBT,EAAAC,EAAAC,cAACqB,EAAA,QAAD,CAAS+C,KAAK,SAASnE,UAAU,YACjCH,EAAAC,EAAAC,cAACyE,EAAD,CACEhE,UAAWb,KAAK2D,MAAME,QACtBlD,QAASX,KAAK2D,MAAMhD,kBAtDZJ,aCCEuE,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAOlF,EAAAC,EAAAC,cAACiF,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.e4f5a83d.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport \"./Fullpage.css\";\n\nexport default class Fullpage extends Component {\n  render() {\n      const {children} = this.props;\n    return (\n        <div className={`fullpage ${this.props.className || ''}`}>\n            {children}\n        </div>\n    )\n  }\n}\n","import React, { Component } from \"react\";\nimport data from \"../data.json\";\nimport { SocialIcon } from \"react-social-icons\";\nimport Fullpage from \"../Components/Fullpage\";\nimport \"./TitlesAndIcons.css\";\nimport { Link, Element } from \"react-scroll\";\nimport MaterialIcon, { colorPalette } from \"material-icons-react\";\n\nexport default class TitlesAndIcons extends Component {\n  render() {\n    return (\n      <div\n        style={{\n          backgroundColor: this.props.bgColor,\n          color: this.props.fontColor\n        }}\n      >\n        <Fullpage className={`first`}>\n          <h1 className=\"title\">{data.title}</h1>\n          <div>\n            <h2 className=\"subtitle\">{data.subtitle}</h2>\n          </div>\n          <div>\n            {Object.keys(data.links).map(key => {\n              return <SocialIcon url={data.links[key]} />;\n            })}\n          </div>\n        </Fullpage>\n        <Link\n          activeClass=\"active\"\n          to=\"about\"\n          spy={true}\n          smooth={true}\n          offset={50}\n          duration={500}\n        >\n          <div\n            style={{\n              display: \"flex\",\n              flexDirection: \"row\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n              transform: \"translateY(-50px)\"\n            }}\n          >\n            <MaterialIcon\n              icon=\"keyboard_arrow_down\"\n              size=\"large\"\n              color={this.props.fontColor}\n            />\n          </div>\n        </Link>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport data from \"../data.json\";\nimport Fullpage from \"../Components/Fullpage\";\nimport \"./AboutSection.css\";\nimport { Link, Element } from \"react-scroll\";\nimport MaterialIcon, { colorPalette } from \"material-icons-react\";\n\nexport default class AboutSection extends Component {\n  render() {\n    return (\n      <div\n        style={{\n          backgroundColor: this.props.bgColor,\n          color: this.props.fontColor\n        }}\n      >\n        <Fullpage className=\"second\">\n          <h3 className=\"title\">{data.sections[0].title}</h3>\n          <p>{data.sections[0].items[0].content}</p>\n        </Fullpage>\n        <Link\n          activeClass=\"active\"\n          to=\"skills\"\n          spy={true}\n          smooth={true}\n          offset={50}\n          duration={500}\n        >\n          <div\n            style={{\n              display: \"flex\",\n              flexDirection: \"row\",\n              justifyContent: \"center\",\n              alignItems: \"center\"\n            }}\n          >\n            <MaterialIcon\n              icon=\"keyboard_arrow_down\"\n              size=\"large\"\n              color={this.props.fontColor}\n            />\n          </div>\n        </Link>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport \"./SkillCard.css\";\n\nexport default class SkillCard extends Component {\n  render() {\n    const { skill } = this.props;\n    return (\n      <div className=\"card\">\n        <div>\n          <img className=\"image-wrapper\" src={skill.content.image} />\n        </div>\n        <div className=\"skill-title-wrapper\">\n          <h4>{skill.content.title}</h4>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport data from \"../data.json\";\nimport Fullpage from \"../Components/Fullpage\";\nimport SkillCard from \"../Components/SkillCard\";\nimport \"./SkillSection.css\";\nimport { Link, Element } from \"react-scroll\";\nimport MaterialIcon, { colorPalette } from \"material-icons-react\";\n\nexport default class SkillSection extends Component {\n  render() {\n    return (\n      <div\n        style={{\n          backgroundColor: this.props.bgColor,\n          color: this.props.fontColor\n        }}\n      >\n        <Fullpage className=\"third\">\n          <h3 className=\"title\">{data.sections[1].title}</h3>\n          <div className=\"cards-flow\">\n            {data.sections[1].items.map(eachSkill => {\n              return <SkillCard className=\"skill-card\" skill={eachSkill} />;\n            })}\n          </div>\n        </Fullpage>\n\n        <Link\n          activeClass=\"active\"\n          to=\"home\"\n          spy={true}\n          smooth={true}\n          offset={50}\n          duration={500}\n        >\n          <div\n            style={{\n              display: \"flex\",\n              flexDirection: \"row\",\n              justifyContent: \"center\",\n              alignItems: \"center\"\n            }}\n          >\n            <MaterialIcon\n              icon=\"keyboard_arrow_up\"\n              size=\"large\"\n              color={this.props.fontColor}\n            />\n          </div>\n        </Link>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport \"./Navigation.css\";\nimport { Link } from \"react-scroll\";\n\nexport default class Navigation extends Component {\n  render() {\n    const { children } = this.props;\n\n    return (\n      <div className=\"nav-flex navbar\">\n        <div className=\"magic-icon\">{children}</div>\n        <Link\n          activeClass=\"active\"\n          to=\"skills\"\n          spy={true}\n          smooth={true}\n          offset={50}\n          duration={500}\n        >\n          <a href=\"\">\n            <p>Skills</p>\n          </a>\n        </Link>\n        <Link\n          activeClass=\"active\"\n          to=\"about\"\n          spy={true}\n          smooth={true}\n          offset={50}\n          duration={500}\n        >\n          <a href=\"\">\n            <p>About</p>\n          </a>\n        </Link>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport TitlesAndIcons from \"./Sections/TitlesAndIcons\";\nimport AboutSection from \"./Sections/AboutSection\";\nimport SkillSection from \"./Sections/SkillSection\";\nimport Navigation from \"./Components/Navigation\";\nimport { Element } from \"react-scroll\";\nimport SnowStorm from \"react-snowstorm\";\nimport data from \"./data.json\";\nimport MaterialIcon, { colorPalette } from \"material-icons-react\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      counter: 0,\n      fnColor: \"#fff\",\n      bgColor: \"#5e6073\"\n    };\n    this.changeTheme = this.changeTheme.bind(this);\n  }\n\n  changeTheme() {\n    let backgroundPalette = [\"#293462\", \"#009975\", \"#5e6073\", \"#854777\"];\n    let fontPalette = [\"#fff1c1\", \"#fff\", \"#fff\", \"#ffc6be\"];\n    let counter = this.state.counter === 3 ? 0 : this.state.counter + 1;\n    this.setState({\n      counter: counter,\n      bgColor: backgroundPalette[this.state.counter],\n      fnColor: fontPalette[this.state.counter]\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <SnowStorm\n          followMouse={false}\n          animationInterval={50}\n          snowCharacter={\"*\"}\n          vMaxY={2}\n          vMaxX={2}\n        />\n\n        <Element name=\"home\" className=\"element\" />\n        <Navigation>\n          <MaterialIcon\n            onClick={this.changeTheme}\n            icon=\"brush\"\n            size=\"medium\"\n            color={this.state.fnColor}\n          />\n        </Navigation>\n        <TitlesAndIcons\n          fontColor={this.state.fnColor}\n          bgColor={this.state.bgColor}\n        />\n        <Element name=\"about\" className=\"element\" />\n        <AboutSection\n          fontColor={this.state.fnColor}\n          bgColor={this.state.bgColor}\n        />\n        <Element name=\"skills\" className=\"element\" />\n        <SkillSection\n          fontColor={this.state.fnColor}\n          bgColor={this.state.bgColor}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}